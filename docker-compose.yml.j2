version: "3.9"

x-db-credentials: &db_credentials
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}

x-market_csgo_parser_service: &market_csgo_parser_service
  image: market_csgo_parser_service
  build:
    context: .
    dockerfile: ./market_csgo_parser/Dockerfile
  depends_on:
    - db
    - seleniarm-hub
  networks:
    - parser_network
  volumes:
    - ./market_csgo_parser/parser.py:/app/parser.py
    - ./conf:/app/conf

networks:
  parser_network:
    driver: bridge


services:
  db:
    environment:
      <<: *db_credentials
    container_name: pg
    image: postgres
    restart: always
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "8080:5432"
    networks:
      - parser_network

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports:
      - "1234:3000"
    environment:
      <<: *db_credentials
      GF_AUTH_DISABLE_INITIAL_SETUP: true
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/home.json
    volumes:
      - ./grafana/dashboards/home.json:/etc/grafana/provisioning/dashboards/home.json
      - ./grafana/datasources/:/etc/grafana/provisioning/datasources/
    networks:
      - parser_network
    depends_on:
      - db

  items:
    container_name: prices-item-parser
    build:
      context: .
      dockerfile: ./items_parser/Dockerfile
    environment:
      <<: *db_credentials
    depends_on:
      - db
    networks:
      - parser_network

  seleniarm-chrome-node:
    deploy:
      replicas: {{ weapon_types | length }}
    image: {{ "seleniarm/node-chromium:latest" if ansible_architecture == 'arm64' else "selenium/node-chrome:latest" }}
    volumes:
      - ./downloads:/home/seluser/Downloads
      - /dev/shm:/dev/shm
    depends_on:
      - seleniarm-hub
    environment:
      - SE_EVENT_BUS_HOST=seleniarm-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    networks:
      - parser_network

  seleniarm-hub:
    image: {{ "seleniarm/hub:latest" if ansible_architecture == 'arm64' else "selenium/hub:latest" }}
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    networks:
      - parser_network

{% for weapon_type in weapon_types %}
  market_csgo_parser_{{ loop.index }}:
    <<: *market_csgo_parser_service
    container_name: market-csgo-parser-node-{{ weapon_type.lower().replace(' ', '_') }}
    environment:
      <<: *db_credentials
      WEAPON_TYPE: {{ weapon_type }}

{% endfor %}