version: "3.9"

x-db-credentials: &db_credentials
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_HOST: ${POSTGRES_HOST}
  POSTGRES_PORT: ${POSTGRES_PORT}

x-global_api_parser_service: &global_api_parser_service
  build:
    context: scrappers
    dockerfile: global_parser_api/Dockerfile

x-global_wss_parser_service: &global_wss_parser_service
  build:
    context: scrappers
    dockerfile: global_parser_websocket/Dockerfile

{% set weapon_types = lookup('env', 'WEAPON_TYPES') | split(',') %}
networks:
{% for weapon_type in weapon_types %}
  parser_net_{{ loop.index0 }}:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "false"
    ipam:
      config:
        - subnet: 182.{{ loop.index0 }}.0.0/16
          gateway: 182.{{ loop.index0 }}.0.1

{% endfor %}
services:
{% for weapon_type in weapon_types %}
{% set weapon_short_name = weapon_type.lower().replace('-', '_').replace(' ', '_') %}
  {{ weapon_short_name }}_global_parser:
    <<: *global_api_parser_service
    image: global_worker
    container_name: {{ weapon_short_name }}_global_parser
    restart: always
    environment:
      <<: *db_credentials
      REDIS_PWD: ${REDIS_PWD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      WEAPON_TYPE: {{ weapon_type }}
      MARKET_TYPES: {{ market_types | join(',') }}
      CUSTOM_ALONE_NODE: {{ weapon_short_name }}-chrome-node
    networks:
      parser_net_{{ loop.index0 }}:
        ipv4_address: 182.{{ loop.index0 }}.0.4

{% set weapon_short_name = weapon_type.lower().replace('-', '_').replace(' ', '_') %}
  {{ weapon_short_name }}_wss_parser:
    <<: *global_wss_parser_service
    image: global_worker_wss
    container_name: {{ weapon_short_name }}_wss_parser
    restart: always
    environment:
      <<: *db_credentials
      REDIS_PWD: ${REDIS_PWD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      WEAPON_TYPE: {{ weapon_type }}
      WS_MARKET_TYPES: {{ ws_market_types | join(',') }}

{% for market_type_one_network_only in market_types_one_network_only %}
  {{ weapon_short_name }}_global_parser_{{ market_type_one_network_only }}:
    <<: *global_api_parser_service
    image: global_worker
    container_name: {{ weapon_short_name }}_global_parser_{{ market_type_one_network_only }}
    restart: always
    environment:
      <<: *db_credentials
      REDIS_PWD: ${REDIS_PWD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      WEAPON_TYPE: {{ weapon_type }}
      MARKET_TYPES: {{ market_type_one_network_only }}
{% endfor %}

  {{ weapon_short_name }}-chrome-node:
    image: {{ "seleniarm/standalone-chromium:latest" if ansible_architecture == 'arm64' else "selenium/standalone-chrome:latest" }}
    container_name: {{ weapon_short_name }}-chrome-node
    hostname: {{ weapon_short_name }}-chrome-node
    restart: always
    volumes:
      - /dev/shm:/dev/shm
    networks:
      parser_net_{{ loop.index0 }}:
        ipv4_address: 182.{{ loop.index0 }}.0.5

{% endfor %}
